[{"permalink":"//","layout":"default","title":"S-Connector","content":"# S-Connector\n\n## What is this?\n\n1. S-Connector 는 화상을 통한 사용자간의 통신을 위한 솔루션을 목적으로 제공되어 집니다.\n2. 서비스 개발사는 S-Connector를 이용하여 다양한 형태의 서비스를 만들수 있습니다.\n3. 현재 제공되는 기능은 다자간 화상 통화 기능입니다.\n4. web 사이트에 iframe 으로 embedded 형식으로 사이트에서 자유롭게 이용 할수 있습니다.\n5. 추후 추가적으로 개발될 기능은 아래와 같습니다.\n\n- 영상 녹화 기능\n- 필터 기능\n- 모바일(ios, android)위한 개발 솔루션 제공(SDK)\n- 콘서트, 강좌등을 위한 솔루션 제공\n- 180 vr 을 통한 실시간 서비스 제공\n\n---\n\n## 목표 Screen-Connector\n\n- 영상 기술이 없이도 영상기반의 비대면 서비스를 개발 및 운영\n\n### 문제점(1) - 솔루션의 기능의 문제\n\n- 동영상 품질 문제 지속 발생\n\n- 보안성 부족에 의한 트롤링 등 세션 침입\n\n- 진부한 사용자 (UX)\n\n### 문제점(2) - 솔루션의 한계\n\n- 내부 시스템(그룹웨어, CRM, ERP 등)에 비대면 서비스 포함 통합운영 하기 어려움.\n\n- 고객응대 접점의 비대면 서비스 활용에 한계.\n\n- 다양한 신규 비대면 서비스를 구축하기 위한 기술적 한계\n\n- 외산(Zoom, Skype 등)에 API 서비스를 연동할 경우의 기술지원 및 기능 추가가 불가\n\n- 비대면 서비스 운영, 유지에 따르는 문제 발생\n\n### S-Connector : 비대면 client SDK 및 API 제공 솔루션\n\n- 최신의 WEB RTC 기술 기반의 화상 API 제공\n\n- 다양한 비대면 서비스 환경의 기능 제공\n\n### S-Connector 장점\n\n- 강력한 비대면 기능 지원\n\n - 비대면 서비스를 다양한 시스템에서 활용할 수 있도록 제공\n\n - 신규 서비스 출시에 비대면 기능을 자유로이 활용\n\n- 적용의 즉시성\n\n - 별도의 설치 없이 바로 테스트 및 사용 가능\n\n- 기능의 안정성\n\n - AWS의 안정적 인프라와 검증된 영상 기술 제공\n\n - 화상솔루션의 별도 운영에 대한 관리와 활용성 제약 극복\n\n- 사용자 중심의 UI 제공\n\n - 제품에 따라서 동영상 품질의 퀄리티 선택 가능\n\n - 각종 템플릿 제공\n\n - 사용 목적에 맞는 템플릿 제공 예정\n\n- 보안성 확보\n\n - 도메인 기반의 접속 제한으로 (동일 도메인으로 접속하지 않으면 접근 불가)\n\n - access token 은 정보성 API 호출 용으로 사용. access token 유출시에도 영상 통화의 보안성 유지\n\n - 보안 검증 도메인 검증, iframe 검증, access token 추가 검증 제공\n\n### 제공 기능\n\n- API 제공\n\n- API에 따른 서비스 모니터링 내역 제공\n\n - API 통한 사용량 파악 가능, 서비스 운영 상태\n\n - 현재 회의중인 회의실 및 접속한 사용자 확인 기능\n\n- 영상UI기본 템플릿 제공\n\n - 기획서에 따라서 sample template 제공 가능\n\n- 다양한 해상도의 영상 지원\n\n - LOW = '320x240', MEDIUM = '640x480',HIGH = '1280x720'\n\n- 화면 공유 기능\n\n - computer 화면 공유를 통한 회의 진행\n\n - 전체 화면, application 화면, browser tab 별 화면 공유\n\n- 채팅 기능\n\n- SDK를 통한 iframe generate\n\n - web page 에서 원하는 위치 및 크기로 custom 할수 있는 기능\n\n### 시스템 환경 최소 요구 사항\n\n#### 사용자 PC\n\n- SD-CPU : Intel Core2Duo 2.4Hz 이상, RAM 2GB 이상\n\n- HD-CPU : Intel Core i5 이상, RAM 4GB 이상\n\n- FHD-CPU : Intel core i7 이상, RAM 4GB 이상\n\n#### 브라우저\n\n- Chrome, Safari, Firefox, Opera, Internet Explore Edge\n\n- Internet Explore 11 버전 이하는 유지보수를 지원하지 않습니다.\n\n#### 웹 카메라\n\n- 동영상 30만 화소(VGA) 이상의 USB 지원 카메라 - 웹캠\n- 헤드셋\n- PC 에 연결 가능한(3.5mm 또는 USB 연결 ) 헤드폰 & 마이크\n\n#### 운영체제(OS)\n\n- chrome 이 실행 가능한 모든 운영체제\n- Microsoft Windows, Mac OS, linux desktop\n\n### 타사 비교\n\n| 구분 | 웹 기반 회의 시스템(google meet) | 설치형 회의 시스템(zoom) | Screen connector |\n| ------------- | -------------------------------- | ------------------------ | -------------------------------------------------- |\n| 개발 SDK제공 | X | X | O |\n| 영상회의 입장 | 솔루션 site 로 이동후 회의 진행 | 어플리케이션 실행 | 고객 사이트 내에서 회의 진행 |\n| 영상 화질 | 고정 화질(일반 화질) | 고정 화질(일반 화질) | 일반, HD, FHD 등등 |\n| 보안성 | 높음(ssl, login 기반) | 솔루션에 따라 다름 | 높음(ssl, domain 인증 기반) + token 기반 설정 가능 |\n| API 제공 | X | O | O 접속자 관련 정보 제공 API |\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"layout":"default","title":"소개","content":"# 소개\n\niframe 기반으로 다자간 영상통화를 지원하는 솔루션입니다.\n\n사용하시는 웹 사이트에서 sdk를 실행 하는 방법으로 영상 통화가 이루어 지게 됩니다.\n","dir":"/site_menu/1.browser/","name":"1.introduce.md","path":"site_menu/1.browser/1.introduce.md","url":"/site_menu/1.browser/1.introduce.html"},{"layout":"default","title":"가이드","content":"# 가이드\n\n## 설명\n\n- library(sdk) download : [s-connector.js](https://api.interwater.biz/lib/s-connector-lib-0.0.1.js)\n\n아래의 예시를 참고 하세요.\n\n```html\n<html>\n <header>\n <script src=\"https://code.jquery.com/jquery-2.2.1.min.js\"></script>\n <script src=\"https://api.interwater.biz/lib/s-connector-lib-0.0.1.js\"></script>\n <script>\n \"use strict\";\n /** 1. 아래 로직은 개발사 측의 서버에서 호출 하여 응답 주도록 하여야 합니다.\n 1. accessKey, secretKey 은 유출 될시에 해킹의 위험이 있습니다.\n 1. 개발시 accessKey, secretKey 값을 개발용과 서비스용으로 따로 발급 받으셔야 합니다.**/\n const serverCall = {\n auth: function () {\n return $.ajax({\n type: \"POST\",\n url: \"https://api.interwater.biz/v1/auth\",\n data: {\n accessKey: \"foziz2mdywm\",\n secretKey:\n \"5bfdabd106fbd8c7ac14935c4e3ce98c4a84c79de697a777809c533f3b9232d116b697bf682ea43fca3a88ee6da62fb14e0f9e7805cf54feb0d38451de24eb333b368b155199272a96289bb70b21fa80bf418af5defe54d771443b80e2fb70beaeba8c59c1aa07aa298ea16c6696f3fd876ae7339adb1c349d14668458651e2a78a7f9094ad52a2ad86b01\",\n },\n dataType: \"json\",\n });\n },\n };\n window.onload = function () {\n const sElement = document.getElementById(\"s-element\");\n const sConnector = new SConnector.default(\n sElement,\n \"https://remote.interwater.biz\"\n );\n const joinElement = document.getElementById(\"join\");\n sConnector.onLeave(function(){\n alert(\"회의가 종료 되었습니다.\");\n });\n sConnector.onFullScreen(function(isFull){\n if(isFull) sElement.requestFullscreen();\n else document.exitFullscreen();\n });\n joinElement.onclick = (e) => {\n sElement.style = \"width: 100%; height: 100%;margin: 5px;\";\n try {\n const success = function (response) {\n console.log(response.data.accessToken);\n const userName = document.getElementById(\"userName\");\n const roomName = document.getElementById(\"roomName\");\n const join = {\n userName: userName.value,\n roomName: roomName.value,\n accessToken: response.data.accessToken,\n };\n sConnector.joinRoom(join);\n };\n /** serverCall method 는 서버에서 응답을 줘야 합니다. */\n serverCall.auth().done(success);\n } catch (e) {\n console.error(e);\n }\n };\n };\n </script>\n </header>\n <h1>S-Connector</h1>\n <div>\n <input id=\"userName\" type=\"text\" placeholder=\"사용자명\" value=\"test\" />\n <input id=\"roomName\" type=\"text\" placeholder=\"회의실명\" value=\"test\" />\n <button id=\"join\">참여</button>\n </div>\n <div id=\"s-element\"></div>\n <html></html>\n</html>\n```\n","dir":"/site_menu/1.browser/","name":"2.guide.md","path":"site_menu/1.browser/2.guide.md","url":"/site_menu/1.browser/2.guide.html"},{"layout":"default","title":"개발 예제","content":"# 개발 예제\n\n## Sample\n\n<html>\n <header>\n <script src=\"https://code.jquery.com/jquery-2.2.1.min.js\"></script>\n <script src=\"https://api.interwater.biz/lib/s-connector-lib-0.0.1.js\"></script>\n <script>\n \"use strict\";\n /** 1. 아래 로직은 개발사 측의 서버에서 호출 하여 응답 주도록 하여야 합니다.\n 1. accessKey, secretKey 은 유출 될시에 해킹의 위험이 있습니다.\n 1. 개발시 accessKey, secretKey 값을 개발용과 서비스용으로 따로 발급 받으셔야 합니다.**/\n const serverCall = {\n auth: function () {\n return $.ajax({\n type: \"POST\",\n url : \"https://api.interwater.biz/v1/auth\",\n data : {\n \"accessKey\": \"foziz2mdywm\",\n \"secretKey\": \"5bfdabd106fbd8c7ac14935c4e3ce98c4a84c79de697a777809c533f3b9232d116b697bf682ea43fca3a88ee6da62fb14e0f9e7805cf54feb0d38451de24eb333b368b155199272a96289bb70b21fa80bf418af5defe54d771443b80e2fb70beaeba8c59c1aa07aa298ea16c6696f3fd876ae7339adb1c349d14668458651e2a78a7f9094ad52a2ad86b01\"\n },\n dataType: \"json\"\n });\n }\n };\n window.onload = function () {\n console.log(\"onload\");\n const sElement = document.getElementById(\"s-element\");\n const sConnector = new SConnector.default(sElement, \"https://remote.interwater.biz\");\n const joinElement = document.getElementById(\"join\");\n sConnector.onLeave(function(){\n alert(\"회의가 종료 되었습니다.\");\n });\n sConnector.onFullScreen(function(isFull){\n if(isFull) sElement.requestFullscreen();\n else document.exitFullscreen();\n });\n joinElement.onclick = (e) => {\n sElement.style = \"width: 100%; height: 700px;margin: 5px;\";\n try {\n const success = function(response) {\n const userName = document.getElementById(\"userName\");\n const roomName = document.getElementById(\"roomName\");\n const join = {\n userName: userName.value,\n roomName: roomName.value,\n accessToken: response.data.accessToken\n };\n sConnector.joinRoom(join);\n };\n /** serverCall method 는 서버에서 응답을 줘야 합니다. */\n serverCall.auth().done(success);\n } catch (e) {\n console.error(e);\n }\n };\n };\n </script>\n </header>\n <h1>S-Connector</h1>\n <div>\n <input id=\"userName\" type=\"text\" placeholder=\"사용자명\" />\n <input id=\"roomName\" type=\"text\" placeholder=\"회의실명\" />\n <button id=\"join\">참여</button>\n </div>\n <div id=\"s-element\"></div>\n<html>\n","dir":"/site_menu/1.browser/","name":"3.sample.md","path":"site_menu/1.browser/3.sample.md","url":"/site_menu/1.browser/3.sample.html"},{"permalink":"/site_menu/1.browser/","layout":"default","title":"웹","content":"# 웹\n\n### 시스템 환경 최소 요구 사항\n\n#### 사용자 PC\n\n- SD-CPU : Intel Core2Duo 2.4Hz 이상, RAM 2GB 이상\n\n- HD-CPU : Intel Core i5 이상, RAM 4GB 이상\n\n- FHD-CPU : Intel core i7 이상, RAM 4GB 이상\n\n#### 브라우저\n\n- Chrome, Safari, Firefox, Opera, Internet Explore Edge\n\n- Internet Explore 11 버전 이하는 유지보수를 지원하지 않습니다.\n\n#### 웹 카메라\n\n- 동영상 30만 화소(VGA) 이상의 USB 지원 카메라 - 웹캠\n- 헤드셋\n- PC 에 연결 가능한(3.5mm 또는 USB 연결 ) 헤드폰 & 마이크\n\n#### 운영체제(OS)\n\n- chrome 이 실행 가능한 모든 운영체제\n- Microsoft Windows, Mac OS, linux desktop\n","dir":"/site_menu/1.browser/","name":"README.md","path":"site_menu/1.browser/README.md","url":"/site_menu/1.browser/"},{"permalink":"/site_menu/2.mobile/","layout":"default","title":"모바일","content":"# 모바일\n\n### 미출시\n\n추후 ios, android 용으로 sdk 제공 예정입니다.\n","dir":"/site_menu/2.mobile/","name":"README.md","path":"site_menu/2.mobile/README.md","url":"/site_menu/2.mobile/"},{"permalink":"/site_menu/3.server-api/","layout":"default","title":"서버 API","content":"# 서버 API\n\n- api url : <https://api.interwater.biz>\n- header : s-connector-jwt\n- 모든 api 는 header(s-connector-jwt) 에 발급받은 access token 를 등록하여야 정상 동작 합니다.\n\n## 0. access token 받아 오기\n\nacceskey + secretkey 를 통하여 인증 토근을 받아 온다.\n\n1. path: v1/auth\n2. method: POST\n3. body : appication/json\n\n| property | type | require | comments |\n| --------- | ------- | ------- | ------------------------------------------------------------------------ |\n| accessKey | string | true | |\n| secretKey | string | true | |\n| expires | number | false | 분 단위 60 이면 1시간 |\n| isOwner | boolean | false | true 로 발급 받은 jwt 로 회의실 생성시 어드민 권환을 가지게 된다(개발중) |\n\n### reqeust sample\n\n```bash\n$ // 60분 session 을 가지는 token\n\n$ curl --location --request POST 'http://localhost:5000/v1/auth' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n \"accessKey\": \"foziz2mdywm\",\n \"secretKey\": \"5bfdabd106fbd8c7ac14935c4e3ce98c4a84c79de697a777809c533f3b9232d116b697bf682ea43fca3a88ee6da62fb14e0f9e7805cf54feb0d38451de24eb333b368b155199272a96289bb70b21fa80bf418af5defe54d771443b80e2fb70beaeba8c59c1aa07aa298ea16c6696f3fd876ae7339adb1c349d14668458651e2a78a7f9094ad52a2ad86b01\",\n \"expires\": 60\n}'\n```\n\n### response\n\n```json\n{\n \"status\": true,\n \"data\": {\n \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJkb21haW4iOiJodHRwczovL3JlYWRtZS5pbnRlcndhdGVyLmJpeiIsImFjY2Vzc0tleSI6ImZveml6Mm1keXdtIiwiaWF0IjoxNjEwMjU5NDUzLCJleHAiOjE2MTAyNjMwNTN9.bI3YamUjo3MZ_443Hj31nwOEkD_f16XLAuIVCtXlyzY\"\n }\n}\n```\n\n## 1. License 정보\n\n인증된 License 정보를 조회 합니다\n\n1. path : v1/info\n2. method : GET\n3. header parameter : s-connector-jwt\n @ 발급 받은 key키를 입력합니다.\n\n### reqeust sample\n\n```bash\n$ curl --location --request GET 'https://api.interwater.biz/v1/info' \\\n--header 's-connector-jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkb21haW4iOiJ0cmlhbCIsImVudiI6InByb2QiLCJpc1RyaWFsIjp0cnVlLCJjb21wYW55X25hbWUiOiJzLWNvbm5lY3RvciIsImlhdCI6MTYwOTA2Nzc3MCwiZXhwIjoxNjA5MTU0MTcwfQ.U7qDLxWGerdc24b3bm6UuS_sh6e2s7R_cI20loivcKk'\n\n```\n\n### response\n\n```json\n{\n \"status\": true, // 상태\n \"data\": {\n \"domain\": \"trial\", // license 도메인\n \"roomLimit\": 10, // 회의실 제한 갯수\n \"enabled\": 1,\n \"createdAt\": \"2020-12-22T15:00:00.000Z\"\n }\n}\n```\n\n## 2. session 정보\n\n현재 회의 중인 회의실 정보를 조회합니다.\n\n1. path : v1/sessions\n2. method : GET\n3. header parameter : s-connector-jwt\n @ 발급 받은 key키를 입력합니다.\n\n### reqeust sample\n\n```bash\n$ curl --location --request GET 'https://api.interwater.biz/v1/sessions' \\\n--header 's-connector-jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkb21haW4iOiJ0cmlhbCIsImVudiI6InByb2QiLCJpc1RyaWFsIjp0cnVlLCJjb21wYW55X25hbWUiOiJzLWNvbm5lY3RvciIsImlhdCI6MTYwOTA2Nzc3MCwiZXhwIjoxNjA5MTU0MTcwfQ.U7qDLxWGerdc24b3bm6UuS_sh6e2s7R_cI20loivcKk'\n\n```\n\n### response\n\n```json\n{\n \"status\": true,\n \"data\": [\n {\n \"status\": \"WAIT\",\n \"user\": 1,\n \"roomName\": \"gfds\"\n }\n ]\n}\n```\n\n## 2. 개별 session 상태\n\n현재 회의 중인 특정 회의실 정보를 조회합니다.\n\n1. path : v1/sessions/:room_name\n2. method : GET\n3. header parameter : s-connector-jwt\n @ 발급 받은 key키를 입력합니다.\n\n### reqeust sample\n\n```bash\n$ curl --location --request GET 'https://api.interwater.biz/v1/sessions/room_name' \\\n--header 's-connector-jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkb21haW4iOiJ0cmlhbCIsImVudiI6InByb2QiLCJpc1RyaWFsIjp0cnVlLCJjb21wYW55X25hbWUiOiJzLWNvbm5lY3RvciIsImlhdCI6MTYwOTA2Nzc3MCwiZXhwIjoxNjA5MTU0MTcwfQ.U7qDLxWGerdc24b3bm6UuS_sh6e2s7R_cI20loivcKk'\n\n```\n\n### response\n\n```json\n{\n \"status\": true,\n \"data\": {\n \"status\": \"ON_GOING\",\n \"user\": 2,\n \"roomName\": \"gsdagd\"\n }\n}\n```\n\n## 3. 사용량 조회\n\ns-connector 에 정보에 따른 s-connector 사용량을 조회 합니다.\n만약 endTime paramter 가 존재 하지 않을경우 시작일부터 현재까지의 데이터를 조회합니다.\n\n1. path : v1/static\n2. method : GET\n3. header parameter : s-connector-jwt\n @ 발급 받은 key키를 입력합니다.\n\n\n| param | type | required | comment |\n| --------- | ------ | -------- | --------- |\n| startTime | string | true | 시작 일자 |\n| endTime | string | false | 종료 일자 |\n\n\n### reqeust sample\n\n\n\n```bash\n$ curl --location --request GET 'https://api.interwater.biz/v1/static?startTime=2021-02-20&endTime=2021-02-25' \\\n--header 's-connector-jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMiLCJkb21haW4iOiJodHRwczovL3JlYWRtZS5pbnRlcndhdGVyLmJpeiIsImFjY2Vzc0tleSI6ImZveml6Mm1keXdtIiwiaWF0IjoxNjEzOTk2NTg5LCJleHAiOjE2MTQwMDI1ODl9.Tj9sIE09hljud-WWjOksy2a97TkoJK4BWDMVH-Fh2yM'\n\n```\n\n### response\n\n```json\n{\n \"status\": true,\n \"data\": {\n \"domain\": \"https://readme.interwater.biz\",\n \"totalSecond\": 49951,\n \"detail\": [\n {\n \"roomName\": \"gsdagd\",\n \"sessionTimeSecond\": 42936,\n \"createdAt\": \"2021-02-22T12:39:26.000Z\"\n },\n {\n \"roomName\": \"test\",\n \"sessionTimeSecond\": 1481,\n \"createdAt\": \"2021-02-22T04:45:20.000Z\"\n },\n {\n \"roomName\": \"test\",\n \"sessionTimeSecond\": 4924,\n \"createdAt\": \"2021-02-22T00:12:58.000Z\"\n },\n {\n \"roomName\": \"12312\",\n \"sessionTimeSecond\": 610,\n \"createdAt\": \"2021-02-21T02:34:52.000Z\"\n }\n ]\n }\n}\n```\n","dir":"/site_menu/3.server-api/","name":"README.md","path":"site_menu/3.server-api/README.md","url":"/site_menu/3.server-api/"},{"sort":2,"permalink":"/site_menu/","layout":"default","title":"다자간 영상 통화(회의) 개발 가이드","content":"<h1 id=\"다자간-영상-통화회의-개발-가이드\">다자간 영상 통화(회의) 개발 가이드</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [웹](/site_menu/1.browser/)\n    - [소개](/site_menu/1.browser/1.introduce.html)\n    - [가이드](/site_menu/1.browser/2.guide.html)\n    - [개발 예제](/site_menu/1.browser/3.sample.html)\n- [모바일](/site_menu/2.mobile/)\n- [서버 API](/site_menu/3.server-api/)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/site_menu/1.browser/\">웹</a>\n <ul>\n <li><a href=\"/site_menu/1.browser/1.introduce.html\">소개</a></li>\n <li><a href=\"/site_menu/1.browser/2.guide.html\">가이드</a></li>\n <li><a href=\"/site_menu/1.browser/3.sample.html\">개발 예제</a></li>\n </ul>\n </li>\n <li><a href=\"/site_menu/2.mobile/\">모바일</a></li>\n <li><a href=\"/site_menu/3.server-api/\">서버 API</a></li>\n</ul>\n","dir":"/site_menu/","name":"README.md","path":"site_menu/README.md","url":"/site_menu/"}]